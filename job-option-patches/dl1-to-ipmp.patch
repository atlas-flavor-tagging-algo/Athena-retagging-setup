--- jobOptions_tagdl1.py	2016-07-13 23:48:48.000000001 +0200
+++ jobOptions_ipmp.py	2016-07-14 00:17:12.000000001 +0200
@@ -140,7 +140,7 @@
 from BTagging.BTaggingFlags import BTaggingFlags
 
 #### if the new file is already in the datatbase: simple edit the name
-###############BTaggingFlags.CalibrationTag = 'BTagCalibRUN12-08-10'
+BTaggingFlags.CalibrationTag = 'BTagCalibRUN12-08-18'
 
 #### if you want to use your own calibration file use this part below
 #BTaggingFlags.CalibrationFromLocalReplica = True
@@ -148,13 +148,18 @@
 #BTaggingFlags.CalibrationTag = 'BTagCalibRUN2-test'
 
 # if the calibration for DL1 is to be read in from a local JSON file
-BTaggingFlags.DL1 = True
-BTaggingFlags.DL1LocalNNConfig = "BTagging_DL1_NNconfig.json"
+# BTaggingFlags.DL1 = True
+# BTaggingFlags.DL1LocalNNConfig = "BTagging_DL1_NNconfig.json"
 
-BTaggingFlags.TagNtupleDumper = True
-BTaggingFlags.TagNtupleStream = "FTAG"
-svcMgr.THistSvc.Output.append(
-  "FTAG DATAFILE='tagger_inputs.root' OPT='RECREATE'")
+# BTaggingFlags.TagNtupleDumper = True
+# BTaggingFlags.TagNtupleStream = "FTAG"
+# svcMgr.THistSvc.Output.append(
+#   "FTAG DATAFILE='tagger_inputs.root' OPT='RECREATE'")
+
+# blank second field means read from file
+BTaggingFlags.RNNIP = True
+BTaggingFlags.RNNIPConfig = {'ipmp': 'ipmp.json', 'ipmk': 'ipmk.json'}
+BTaggingFlags.OutputLevel = DEBUG
 
 include("RetagFragment.py")
 if doRetag:
@@ -205,6 +210,13 @@
 ##########################################################################################################################################################
 ##########################################################################################################################################################
 
+ipnn_inputs = [
+  "d0", "d0sig", "z0", "z0sig", "d0z0sig", "grade", "fromV0", "pt", "dPhi",
+  "absEta", "chi2", "nInnHits", "nNextToInnHits", "nBLHits", "nsharedBLHits",
+  "nsplitBLHits", "nPixHits", "nsharedPixHits", "nsplitPixHits", "nSCTHits",
+  "nsharedSCTHits", "expectBLayerHit",
+]
+
 ### Main Ntuple Dumper Algorithm
 for JetCollection in JetCollections:
   shortJetName=JetCollection.replace("AntiKt","Akt").replace("TopoJets","To").replace("TrackJets","Tr")
@@ -237,6 +249,16 @@
   alg.JetCleaningTool.DoUgly  = True
   if not doComputeReference: algSeq += alg
 
+  # add RNN outputs
+  for tagger in ['ipmp']:
+    for flav in ['pu', 'pc', 'pb', 'ptau']:
+      alg.ArbitraryDoubleBranches.append(tagger + '_' + flav)
+    for inpt in ipnn_inputs:
+      alg.ArbitraryFloatVectorBranches.append(tagger + '_' + inpt)
+
+  # SLAC version
+  alg.ArbitraryDoubleBranches.append('ipmk_pb')
+
   ###print JetCollection
   calibfile        = "JES_Prerecommendation2015_Feb2015.config"
   collectionForTool="AntiKt4LCTopo"
